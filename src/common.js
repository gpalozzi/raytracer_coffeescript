// Generated by CoffeeScript 1.7.1
(function() {
  var common,
    __slice = [].slice;

  common = {};

  if (typeof window !== "undefined" && window !== null) {
    window.common = common;
  }

  if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
    module.exports = common;
  }

  common.error_if_not = function() {
    var check, msg;
    check = arguments[0], msg = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (check) {

    } else {
      return console.log(msg);
    }
  };

  common.clone = function(obj) {
    var flags, key, newInstance;
    if ((obj == null) || typeof obj !== 'object') {
      return obj;
    }
    if (obj instanceof Date) {
      return new Date(obj.getTime());
    }
    if (obj instanceof RegExp) {
      flags = '';
      if (obj.global != null) {
        flags += 'g';
      }
      if (obj.ignoreCase != null) {
        flags += 'i';
      }
      if (obj.multiline != null) {
        flags += 'm';
      }
      if (obj.sticky != null) {
        flags += 'y';
      }
      return new RegExp(obj.source, flags);
    }
    newInstance = new obj.constructor();
    for (key in obj) {
      newInstance[key] = common.clone(obj[key]);
    }
    return newInstance;
  };

}).call(this);

//# sourceMappingURL=common.map
