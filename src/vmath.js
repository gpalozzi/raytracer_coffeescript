// Generated by CoffeeScript 1.7.1
(function() {
  var common, vmath,
    __modulo = function(a, b) { return (a % b + +b) % b; };

  vmath = {};

  if (typeof window !== "undefined" && window !== null) {
    window.vmath = vmath;
  }

  if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
    module.exports = vmath;
  }

  common = window.common;

  vmath.PI = 3.1415926535897932384626433832795;

  vmath.int = function(x) {
    return parseInt(x);
  };

  vmath.radians = function(deg) {
    return deg / 180 * PI;
  };

  vmath.degrees = function(rad) {
    return rad / PI * 180;
  };

  vmath.pow2 = function(x) {
    var i, ret, _i;
    ret = 1;
    for (i = _i = 0; 0 <= x ? _i < x : _i > x; i = 0 <= x ? ++_i : --_i) {
      ret *= 2;
    }
    return ret;
  };

  vmath.sqr = function(x) {
    return x * x;
  };

  vmath.vec2f = (function() {
    function vec2f(args) {
      if (args == null) {
        args = [0, 0, 0];
      }
      this.x = args[0], this.y = args[1];
    }

    vec2f.prototype.clone = function() {
      return common.clone(this);
    };

    vec2f.prototype.opposite = function() {
      return new vmath.vec2f([-this.x, -this.y]);
    };

    vec2f.prototype.sum = function(b) {
      if (b instanceof vmath.vec2f) {
        this.x += b.x;
        this.y += b.y;
        return this;
      }
    };

    vec2f.prototype.sub = function(b) {
      if (b instanceof vmath.vec2f) {
        this.x -= b.x;
        this.y -= b.y;
        return this;
      }
    };

    vec2f.prototype.mul = function(b) {
      if (b instanceof vmath.vec2f) {
        this.x *= b.x;
        this.y *= b.y;
        return this;
      } else if (typeof b === "number") {
        this.x *= b;
        this.y *= b;
        return this;
      }
    };

    vec2f.prototype.div = function(b) {
      if (b instanceof vmath.vec2f) {
        this.x /= b.x;
        this.y /= b.y;
        return this;
      } else if (typeof b === "number") {
        this.x /= b;
        this.y /= b;
        return this;
      }
    };

    return vec2f;

  })();

  vmath.zero2f = new vmath.vec2f();

  vmath.one2f = new vmath.vec2f(1, 1);

  vmath.x2f = new vmath.vec2f(1, 0);

  vmath.y2f = new vmath.vec2f(0, 1);

  vmath.vec3f = (function() {
    function vec3f(args) {
      if (args == null) {
        args = [0, 0, 0];
      }
      this.x = args[0], this.y = args[1], this.z = args[2];
    }

    vec3f.prototype.clone = function() {
      return common.clone(this);
    };

    vec3f.prototype.opposite = function() {
      return new vmath.vec3f([-this.x, -this.y, -this.z]);
    };

    vec3f.prototype.array = function() {
      return [this.x, this.y, this.z];
    };

    vec3f.prototype.sum = function(b) {
      if (b instanceof vmath.vec3f) {
        this.x += b.x;
        this.y += b.y;
        this.z += b.z;
        return this;
      }
    };

    vec3f.prototype.sub = function(b) {
      if (b instanceof vmath.vec3f) {
        this.x -= b.x;
        this.y -= b.y;
        this.z -= b.z;
        return this;
      }
    };

    vec3f.prototype.mul = function(b) {
      if (b instanceof vmath.vec3f) {
        this.x *= b.x;
        this.y *= b.y;
        this.z *= b.z;
        return this;
      } else if (typeof b === "number") {
        this.x *= b;
        this.y *= b;
        this.z *= b;
        return this;
      }
    };

    vec3f.prototype.div = function(b) {
      if (b instanceof vmath.vec3f) {
        this.x /= b.x;
        this.y /= b.y;
        this.z /= b.z;
        return this;
      } else if (typeof b === "number") {
        this.x /= b;
        this.y /= b;
        this.z /= b;
        return this;
      }
    };

    return vec3f;

  })();

  vmath.zero3f = new vmath.vec3f;

  vmath.one3f = new vmath.vec3f([1, 1, 1]);

  vmath.x3f = new vmath.vec3f([1, 0, 0]);

  vmath.y3f = new vmath.vec3f([0, 1, 0]);

  vmath.z3f = new vmath.vec3f([0, 0, 1]);

  vmath.vec4f = (function() {
    function vec4f(args) {
      if (args == null) {
        args = [0, 0, 0, 0];
      }
      this.x = args[0], this.y = args[1], this.z = args[2], this.w = args[3];
    }

    vec4f.prototype.clone = function() {
      return common.clone(this);
    };

    vec4f.prototype.opposite = function() {
      return new vmath.vec4f([-this.x, -this.y, -this.z, -this.w]);
    };

    vec4f.prototype.sum = function(b) {
      if (b instanceof vmath.vec4f) {
        this.x += b.x;
        this.y += b.y;
        this.z += b.z;
        this.w += b.w;
        return this;
      }
    };

    vec4f.prototype.sub = function(b) {
      if (b instanceof vmath.vec4f) {
        this.x -= b.x;
        this.y -= b.y;
        this.z -= b.z;
        this.w -= b.w;
        return this;
      }
    };

    vec4f.prototype.mul = function(b) {
      if (b instanceof vmath.vec4f) {
        this.x *= b.x;
        this.y *= b.y;
        this.z *= b.z;
        this.w *= b.w;
        return this;
      } else if (typeof b === "number") {
        this.x *= b;
        this.y *= b;
        this.z *= b;
        this.w *= b;
        return this;
      }
    };

    vec4f.prototype.div = function(b) {
      if (b instanceof vmath.vec4f) {
        this.x /= b.x;
        this.y /= b.y;
        this.z /= b.z;
        this.w /= b.w;
        return this;
      } else if (typeof b === "number") {
        this.x /= b;
        this.y /= b;
        this.z /= b;
        this.w /= b;
        return this;
      }
    };

    return vec4f;

  })();

  vmath.zero4f = new vmath.vec4f;

  vmath.one4f = new vmath.vec4f([1, 1, 1, 1]);

  vmath.x4f = new vmath.vec4f([1, 0, 0, 0]);

  vmath.y4f = new vmath.vec4f([0, 1, 0, 0]);

  vmath.z4f = new vmath.vec4f([0, 0, 1, 0]);

  vmath.w4f = new vmath.vec4f([0, 0, 0, 1]);

  vmath.vec2i = (function() {
    function vec2i(args) {
      if (args == null) {
        args = [0, 0];
      }
      this.x = args[0], this.y = args[1];
      this.x = vmath.int(this.x);
      this.y = vmath.int(this.y);
    }

    vec2i.prototype.clone = function() {
      return common.clone(this);
    };

    vec2i.prototype.opposite = function() {
      return new vmath.vec2i([-this.x, -this.y]);
    };

    vec2i.prototype.sum = function(b) {
      if (b instanceof vmath.vec2i) {
        this.x += b.x;
        this.y += b.y;
        return this;
      }
    };

    vec2i.prototype.sub = function(b) {
      if (b instanceof vmath.vec2i) {
        this.x -= b.x;
        this.y -= b.y;
        return this;
      }
    };

    vec2i.prototype.mul = function(b) {
      if (b instanceof vmath.vec2i) {
        this.x *= b.x;
        this.y *= b.y;
        return this;
      } else if (typeof b === "number") {
        this.x = vmath.int(this.x * b);
        this.y = vmath.int(this.y * b);
        return this;
      }
    };

    vec2i.prototype.div = function(b) {
      if (b instanceof vmath.vec2i) {
        this.x = Math.floor(this.x / b.x);
        this.y = Math.floor(this.y / b.y);
        return this;
      } else if (typeof b === "number") {
        this.x = Math.floor(this.x / b);
        this.y = Math.floor(this.y / b);
        return this;
      }
    };

    return vec2i;

  })();

  vmath.zero2i = new vmath.vec2i;

  vmath.one2i = new vmath.vec2i([1, 1]);

  vmath.vec3i = (function() {
    function vec3i(args) {
      if (args == null) {
        args = [0, 0, 0];
      }
      this.x = args[0], this.y = args[1], this.z = args[2];
      this.x = vmath.int(this.x);
      this.y = vmath.int(this.y);
      this.z = vmath.int(this.z);
    }

    vec3i.prototype.clone = function() {
      return common.clone(this);
    };

    vec3i.prototype.opposite = function() {
      return new vmath.vec3i([-this.x, -this.y, -this.z]);
    };

    vec3i.prototype.sum = function(b) {
      if (b instanceof vmath.vec3i) {
        this.x += b.x;
        this.y += b.y;
        this.z += b.z;
        return this;
      }
    };

    vec3i.prototype.sub = function(b) {
      if (b instanceof vmath.vec3i) {
        this.x -= b.x;
        this.y -= b.y;
        this.z -= b.z;
        return this;
      }
    };

    vec3i.prototype.mul = function(b) {
      if (b instanceof vmath.vec3i) {
        this.x *= b.x;
        this.y *= b.y;
        this.z *= b.z;
        return this;
      } else if (typeof b === "number") {
        this.x = vmath.int(this.x * b);
        this.y = vmath.int(this.y * b);
        this.z = vmath.int(this.z * b);
        return this;
      }
    };

    vec3i.prototype.div = function(b) {
      if (b instanceof vmath.vec3i) {
        this.x = Math.floor(this.x / b.x);
        this.y = Math.floor(this.y / b.y);
        this.z = Math.floor(this.z / b.z);
        return this;
      } else if (typeof b === "number") {
        this.x = Math.floor(this.x / b);
        this.y = Math.floor(this.y / b);
        this.z = Math.floor(this.z / b);
        return this;
      }
    };

    return vec3i;

  })();

  vmath.zero3i = new vmath.vec3i;

  vmath.one3i = new vmath.vec3i([1, 1, 1]);

  vmath.vec4i = (function() {
    function vec4i(args) {
      if (args == null) {
        args = [0, 0, 0, 0];
      }
      this.x = args[0], this.y = args[1], this.z = args[2], this.w = args[3];
      this.x = vmath.int(this.x);
      this.y = vmath.int(this.y);
      this.z = vmath.int(this.z);
      this.w = vmath.int(this.w);
    }

    vec4i.prototype.clone = function() {
      return common.clone(this);
    };

    vec4i.prototype.opposite = function() {
      return new vmath.vec4i([-this.x, -this.y, -this.z, -this.w]);
    };

    vec4i.prototype.sum = function(b) {
      if (b instanceof vmath.vec4i) {
        this.x += b.x;
        this.y += b.y;
        this.z += b.z;
        this.w += b.w;
        return this;
      }
    };

    vec4i.prototype.sub = function(b) {
      if (b instanceof vmath.vec4i) {
        this.x -= b.x;
        this.y -= b.y;
        this.z -= b.z;
        this.w -= b.w;
        return this;
      }
    };

    vec4i.prototype.mul = function(b) {
      if (b instanceof vmath.vec4i) {
        this.x *= b.x;
        this.y *= b.y;
        this.z *= b.z;
        this.w *= b.w;
        return this;
      } else if (typeof b === "number") {
        this.x = vmath.int(this.x * b);
        this.y = vmath.int(this.y * b);
        this.z = vmath.int(this.z * b);
        this.w = vmath.int(this.w * b);
        return this;
      }
    };

    vec4i.prototype.div = function(b) {
      if (b instanceof vmath.vec4i) {
        this.x = Math.floor(this.x / b.x);
        this.y = Math.floor(this.y / b.y);
        this.z = Math.floor(this.z / b.z);
        this.w = Math.floor(this.w / b.w);
        return this;
      } else if (typeof b === "number") {
        this.x = Math.floor(this.x / b);
        this.y = Math.floor(this.y / b);
        this.z = Math.floor(this.z / b);
        this.w = Math.floor(this.w / b);
        return this;
      }
    };

    return vec4i;

  })();

  vmath.zero4i = new vmath.vec4i;

  vmath.one4i = new vmath.vec4i([1, 1, 1, 1]);

  vmath.frame3f = (function() {
    function frame3f(args) {
      var _ref, _ref1, _ref2, _ref3;
      if (args == null) {
        args = {};
      }
      this.o = new vmath.vec3f((_ref = args.o) != null ? _ref : [0, 0, 0]);
      this.x = new vmath.vec3f((_ref1 = args.x) != null ? _ref1 : [1, 0, 0]);
      this.y = new vmath.vec3f((_ref2 = args.y) != null ? _ref2 : [0, 1, 0]);
      this.z = new vmath.vec3f((_ref3 = args.z) != null ? _ref3 : [0, 0, 1]);
    }

    frame3f.prototype.clone = function() {
      return common.clone(this);
    };

    return frame3f;

  })();

  vmath.identity_frame3f = new vmath.frame3f;

  vmath.mat4f = (function() {
    function mat4f(x_x, x_y, x_z, x_w, y_x, y_y, y_z, y_w, z_x, z_y, z_z, z_w, w_x, w_y, w_z, w_w) {
      if (x_x == null) {
        x_x = vmath.x4f;
      }
      if (x_y == null) {
        x_y = vmath.y4f;
      }
      if (x_z == null) {
        x_z = vmath.z4f;
      }
      if (x_w == null) {
        x_w = vmath.w4f;
      }
      if (arguments.length === 4 || arguments.length === 0) {
        this.x = x_x.clone();
        this.y = x_y.clone();
        this.z = x_z.clone();
        this.w = x_w.clone();
      } else if (arguments.length === 16) {
        this.x = new vmath.vec4f(x_x, x_y, x_z, x_w);
        this.y = new vmath.vec4f(y_x, y_y, y_z, y_w);
        this.z = new vmath.vec4f(z_x, z_y, z_z, z_w);
        this.w = new vmath.vec4f(w_x, w_y, w_z, w_w);
      } else {
        console.log("Error in function vmath.mat4f constructor");
      }
    }

    mat4f.prototype.clone = function() {
      return common.clone(this);
    };

    mat4f.prototype.opposite = function() {
      return new vmath.mat4f(-this.x, -this.y, -this.z, -this.w);
    };

    mat4f.prototype.sum = function(b) {
      if (b instanceof vmath.mat4f) {
        this.x.sum(b.x);
        this.y.sum(b.y);
        this.z.sum(b.z);
        this.w.sum(b.w);
        return this;
      }
    };

    mat4f.prototype.sub = function(b) {
      if (b instanceof vmath.mat4f) {
        this.x.sub(b.x);
        this.y.sub(b.y);
        this.z.sub(b.z);
        this.w.sub(b.w);
        return this;
      }
    };

    mat4f.prototype.mul = function(b) {
      var temp;
      if (b instanceof vmath.mat4f) {
        temp = vmath.mul(this, b);
        this.x = temp.x;
        this.y = temp.y;
        this.z = temp.z;
        this.w = temp.w;
        return this;
      } else if (typeof b === "number") {
        this.x.mul(b);
        this.y.mul(b);
        this.z.mul(b);
        this.w.mul(b);
        return this;
      }
    };

    mat4f.prototype.div = function(b) {
      if (typeof b === "number") {
        this.x.div(b);
        this.y.div(b);
        this.z.div(b);
        this.w.div(b);
        return this;
      }
    };

    return mat4f;

  })();

  vmath.range1f = (function() {
    function range1f(min, max) {
      this.min = min != null ? min : 1;
      this.max = max != null ? max : -1;
    }

    return range1f;

  })();

  vmath.range3f = (function() {
    function range3f(min, max) {
      this.min = min != null ? min : vmath.one3f.clone();
      this.max = max != null ? max : vmath.one3f.opposite();
      this.min = this.min.clone();
      this.max = this.max.clone();
    }

    return range3f;

  })();

  vmath.equal = function(a, b) {
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return a.x === b.x && a.y === b.y;
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return a.x === b.x && a.y === b.y && a.z === b.z;
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return a.x === b.x && a.y === b.y;
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return a.x === b.x && a.y === b.y && a.z === b.z;
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;
    } else if (a instanceof vmath.frame3f && b instanceof vmath.frame3f) {
      return vmath.equal(a.o, b.o) && vmath.equal(a.x, b.x) && vmath.equal(a.y, b.y) && vmath.equal(a.z, b.z);
    } else if (a instanceof vmath.mat4f && b instanceof vmath.mat4f) {
      return vmath.equal(a.x, b.x) && vmath.equal(a.y, b.y) && vmath.equal(a.z, b.z) && vmath.equal(a.w, b.w);
    } else if (a instanceof vmath.range1f && b instanceof vmath.range1f) {
      return a.min === b.min && a.max === b.max;
    } else if (a instanceof vmath.range3f && b instanceof vmath.range3f) {
      return vmath.equal(a.min, b.min) && vmath.equal(a.max, b.max);
    } else {
      return console.log("Error in function vmath.equal");
    }
  };

  vmath.sum = function(a, b) {
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return new vmath.vec2f([a.x + b.x, a.y + b.y]);
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([a.x + b.x, a.y + b.y, a.z + b.z]);
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w]);
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return new vmath.vec2i([a.x + b.x, a.y + b.y]);
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return new vmath.vec3i([a.x + b.x, a.y + b.y, a.z + b.z]);
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return new vmath.vec4i([a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w]);
    } else if (a instanceof vmath.mat4f && b instanceof vmath.mat4f) {
      return new vmath.mat4f(vmath.sum(a.x, b.x), vmath.sum(a.y, b.y), vmath.sum(a.z, b.z), vmath.sum(a.w, b.w));
    } else {
      return console.log("Error in function sum");
    }
  };

  vmath.sub = function(a, b) {
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return new vmath.vec2f([a.x - b.x, a.y - b.y]);
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([a.x - b.x, a.y - b.y, a.z - b.z]);
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w]);
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return new vmath.vec2i([a.x - b.x, a.y - b.y]);
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return new vmath.vec3i([a.x - b.x, a.y - b.y, a.z - b.z]);
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return new vmath.vec4i([a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w]);
    } else if (a instanceof vmath.mat4f && b instanceof vmath.mat4f) {
      return new vmath.mat4f(vmath.sub(a.x, b.x), vmath.sub(a.y, b.y), vmath.sub(a.z, b.z), vmath.sub(a.w, b.w));
    } else {
      return console.log("Error in function sub");
    }
  };

  vmath.mul = function(a, b) {
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return new vmath.vec2f([a.x * b.x, a.y * b.y]);
    } else if (a instanceof vmath.vec2f && typeof b === "number") {
      return new vmath.vec2f([a.x * b, a.y * b]);
    } else if (typeof a === "number" && b instanceof vmath.vec2f) {
      return new vmath.vec2f([b.x * a, b.y * a]);
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([a.x * b.x, a.y * b.y, a.z * b.z]);
    } else if (a instanceof vmath.vec3f && typeof b === "number") {
      return new vmath.vec3f([a.x * b, a.y * b, a.z * b]);
    } else if (typeof a === "number" && b instanceof vmath.vec3f) {
      return new vmath.vec3f([b.x * a, b.y * a, b.z * a]);
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w]);
    } else if (a instanceof vmath.vec4f && typeof b === "number") {
      return new vmath.vec4f([a.x * b, a.y * b, a.z * b, a.w * b]);
    } else if (typeof a === "number" && b instanceof vmath.vec4f) {
      return new vmath.vec4f([b.x * a, b.y * a, b.z * a, b.w * a]);
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return new vmath.vec2i([a.x * b.x, a.y * b.y]);
    } else if (a instanceof vmath.vec2i && typeof b === "number") {
      return new vmath.vec2i([vmath.int(a.x * b), vmath.int(a.y * b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec2i) {
      return new vmath.vec2i([vmath.int(b.x * a), vmath.int(b.y * a)]);
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return new vmath.vec3i([a.x * b.x, a.y * b.y, a.z * b.z]);
    } else if (a instanceof vmath.vec3i && typeof b === "number") {
      return new vmath.vec3i([vmath.int(a.x * b), vmath.int(a.y * b), vmath.int(a.z * b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec3i) {
      return new vmath.vec3i([vmath.int(b.x * a), vmath.int(b.y * a), vmath.int(b.z * a)]);
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return new vmath.vec4i([a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w]);
    } else if (a instanceof vmath.vec4i && typeof b === "number") {
      return new vmath.vec4i([vmath.int(a.x * b), vmath.int(a.y * b), vmath.int(a.z * b), vmath.int(a.w * b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec4i) {
      return new vmath.vec4i([vmath.int(b.x * a), vmath.int(b.y * a), vmath.int(b.z * a), vmath.int(b.w * a)]);
    } else if (a instanceof vmath.mat4f && b instanceof vmath.mat4f) {
      return new vmath.mat4f(a.x.x * b.x.x + a.x.y * b.y.x + a.x.z * b.z.x + a.x.w * b.w.x, a.x.x * b.x.y + a.x.y * b.y.y + a.x.z * b.z.y + a.x.w * b.w.y, a.x.x * b.x.z + a.x.y * b.y.z + a.x.z * b.z.z + a.x.w * b.w.z, a.x.x * b.x.w + a.x.y * b.y.w + a.x.z * b.z.w + a.x.w * b.w.w, a.y.x * b.x.x + a.y.y * b.y.x + a.y.z * b.z.x + a.y.w * b.w.x, a.y.x * b.x.y + a.y.y * b.y.y + a.y.z * b.z.y + a.y.w * b.w.y, a.y.x * b.x.z + a.y.y * b.y.z + a.y.z * b.z.z + a.y.w * b.w.z, a.y.x * b.x.w + a.y.y * b.y.w + a.y.z * b.z.w + a.y.w * b.w.w, a.z.x * b.x.x + a.z.y * b.y.x + a.z.z * b.z.x + a.z.w * b.w.x, a.z.x * b.x.y + a.z.y * b.y.y + a.z.z * b.z.y + a.z.w * b.w.y, a.z.x * b.x.z + a.z.y * b.y.z + a.z.z * b.z.z + a.z.w * b.w.z, a.z.x * b.x.w + a.z.y * b.y.w + a.z.z * b.z.w + a.z.w * b.w.w, a.w.x * b.x.x + a.w.y * b.y.x + a.w.z * b.z.x + a.w.w * b.w.x, a.w.x * b.x.y + a.w.y * b.y.y + a.w.z * b.z.y + a.w.w * b.w.y, a.w.x * b.x.z + a.w.y * b.y.z + a.w.z * b.z.z + a.w.w * b.w.z, a.w.x * b.x.w + a.w.y * b.y.w + a.w.z * b.z.w + a.w.w * b.w.w);
    } else if (a instanceof vmath.mat4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([vmath.dot(a.x, b), vmath.dot(a.y, b), vmath.dot(a.z, b), vmath.dot(a.w, b)]);
    } else if (a instanceof vmath.mat4f && typeof b === "number") {
      return new vmath.mat4f(vmath.mul(a.x, b), vmath.mul(a.y, b), vmath.mul(a.z, b), vmath.mul(a.w, b));
    } else if (typeof a === "number" && b instanceof vmath.mat4f) {
      return new vmath.mat4f(vmath.mul(b.x, a), vmath.mul(b.y, a), vmath.mul(b.z, a), vmath.mul(b.w, a));
    } else {
      return console.log("Error in function mul");
    }
  };

  vmath.div = function(a, b) {
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return new vmath.vec2f([a.x / b.x, a.y / b.y]);
    } else if (a instanceof vmath.vec2f && typeof b === "number") {
      return new vmath.vec2f([a.x / b, a.y / b]);
    } else if (typeof a === "number" && b instanceof vmath.vec2f) {
      return new vmath.vec2f([b.x / a, b.y / a]);
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([a.x / b.x, a.y / b.y, a.z / b.z]);
    } else if (a instanceof vmath.vec3f && typeof b === "number") {
      return new vmath.vec3f([a.x / b, a.y / b, a.z / b]);
    } else if (typeof a === "number" && b instanceof vmath.vec3f) {
      return new vmath.vec3f([b.x / a, b.y / a, b.z / a]);
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([a.x / b.x, a.y / b.y, a.z / b.z, a.w / b.w]);
    } else if (a instanceof vmath.vec4f && typeof b === "number") {
      return new vmath.vec4f([a.x / b, a.y / b, a.z / b, a.w / b]);
    } else if (typeof a === "number" && b instanceof vmath.vec4f) {
      return new vmath.vec4f([b.x / a, b.y / a, b.z / a, b.w / a]);
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return new vmath.vec2i([Math.floor(a.x / b.x), Math.floor(a.y / b.y)]);
    } else if (a instanceof vmath.vec2i && typeof b === "number") {
      return new vmath.vec2i([Math.floor(a.x / b), Math.floor(a.y / b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec2i) {
      return new vmath.vec2i([Math.floor(b.x / a), Math.floor(b.y / a)]);
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return new vmath.vec3i([Math.floor(a.x / b.x), Math.floor(a.y / b.y), Math.floor(a.z / b.z)]);
    } else if (a instanceof vmath.vec3i && typeof b === "number") {
      return new vmath.vec3i([Math.floor(a.x / b), Math.floor(a.y / b), Math.floor(a.z / b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec3i) {
      return new vmath.vec3i([Math.floor(b.x / a), Math.floor(b.y / a), Math.floor(b.z / a)]);
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return new vmath.vec4i([Math.floor(a.x / b.x), Math.floor(a.y / b.y), Math.floor(a.z / b.z), Math.floor(a.w / b.w)]);
    } else if (a instanceof vmath.vec4i && typeof b === "number") {
      return new vmath.vec4i([Math.floor(a.x / b), Math.floor(a.y / b), Math.floor(a.z / b), Math.floor(a.w / b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec4i) {
      return new vmath.vec4i([Math.floor(b.x / a), Math.floor(b.y / a), Math.floor(b.z / a), Math.floor(b.w / a)]);
    } else if (a instanceof vmath.mat4f && typeof b === "number") {
      return new vmath.mat4f(vmath.div(a.x, b), vmath.div(a.y, b), vmath.div(a.z, b), vmath.div(a.w, b));
    } else if (typeof a === "number" && b instanceof vmath.mat4f) {
      return new vmath.mat4f(vmath.div(b.x, a), vmath.div(b.y, a), vmath.div(b.z, a), vmath.div(b.w, a));
    } else {
      return console.log("Error in function div");
    }
  };

  vmath.max = function(a, b) {
    if (typeof a === "number" && typeof b === "number") {
      if (a > b) {
        return a;
      } else {
        return b;
      }
    } else if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return new vmath.vec2f([vmath.max(a.x, b.x), vmath.max(a.y, b.y)]);
    } else if (a instanceof vmath.vec2f && typeof b === "number") {
      return new vmath.vec2f([vmath.max(a.x, b), vmath.max(a.y, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec2f) {
      return new vmath.vec2f([vmath.max(a, b.x), vmath.max(a, b.x)]);
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.max(a.x, b.x), vmath.max(a.y, b.y), vmath.max(a.z, b.z)]);
    } else if (a instanceof vmath.vec3f && typeof b === "number") {
      return new vmath.vec3f([vmath.max(a.x, b), vmath.max(a.y, b), vmath.max(a.z, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.max(a, b.x), vmath.max(a, b.x), vmath.max(a, b.z)]);
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([vmath.max(a.x, b.x), vmath.max(a.y, b.y), vmath.max(a.z, b.z), vmath.max(a.w, b.w)]);
    } else if (a instanceof vmath.vec4f && typeof b === "number") {
      return new vmath.vec4f([vmath.max(a.x, b), vmath.max(a.y, b), vmath.max(a.z, b), vmath.max(a.w, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec4f) {
      return new vmath.vec4f([vmath.max(a, b.x), vmath.max(a, b.x), vmath.max(a, b.z), vmath.max(a, b.w)]);
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return new vmath.vec2i([vmath.max(a.x, b.x), vmath.max(a.y, b.y)]);
    } else if (a instanceof vmath.vec2i && typeof b === "number") {
      return new vmath.vec2i([vmath.max(a.x, b), vmath.max(a.y, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec2i) {
      return new vmath.vec2i([vmath.max(a, b.x), vmath.max(a, b.x)]);
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return new vmath.vec3i([vmath.max(a.x, b.x), vmath.max(a.y, b.y), vmath.max(a.z, b.z)]);
    } else if (a instanceof vmath.vec3i && typeof b === "number") {
      return new vmath.vec3i([vmath.max(a.x, b), vmath.max(a.y, b), vmath.max(a.z, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec3i) {
      return new vmath.vec3i([vmath.max(a, b.x), vmath.max(a, b.x), vmath.max(a, b.z)]);
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return new vmath.vec4i([vmath.max(a.x, b.x), vmath.max(a.y, b.y), vmath.max(a.z, b.z), vmath.max(a.w, b.w)]);
    } else if (a instanceof vmath.vec4i && typeof b === "number") {
      return new vmath.vec4i([vmath.max(a.x, b), vmath.max(a.y, b), vmath.max(a.z, b), vmath.max(a.w, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec4i) {
      return new vmath.vec4i([vmath.max(a, b.x), vmath.max(a, b.x), vmath.max(a, b.z), vmath.max(a, b.w)]);
    }
  };

  vmath.min = function(a, b) {
    if (typeof a === "number" && typeof b === "number") {
      if (a < b) {
        return a;
      } else {
        return b;
      }
    }
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return new vmath.vec2f([vmath.min(a.x, b.x), vmath.min(a.y, b.y)]);
    } else if (a instanceof vmath.vec2f && typeof b === "number") {
      return new vmath.vec2f([vmath.min(a.x, b), vmath.min(a.y, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec2f) {
      return new vmath.vec2f([vmath.min(a, b.x), vmath.min(a, b.x)]);
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.min(a.x, b.x), vmath.min(a.y, b.y), vmath.min(a.z, b.z)]);
    } else if (a instanceof vmath.vec3f && typeof b === "number") {
      return new vmath.vec3f([vmath.min(a.x, b), vmath.min(a.y, b), vmath.min(a.z, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.min(a, b.x), vmath.min(a, b.x), vmath.min(a, b.z)]);
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return new vmath.vec4f([vmath.min(a.x, b.x), vmath.min(a.y, b.y), vmath.min(a.z, b.z), vmath.min(a.w, b.w)]);
    } else if (a instanceof vmath.vec4f && typeof b === "number") {
      return new vmath.vec4f([vmath.min(a.x, b), vmath.min(a.y, b), vmath.min(a.z, b), vmath.min(a.w, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec4f) {
      return new vmath.vec4f([vmath.min(a, b.x), vmath.min(a, b.x), vmath.min(a, b.z), vmath.min(a, b.w)]);
    } else if (a instanceof vmath.vec2i && b instanceof vmath.vec2i) {
      return new vmath.vec2i([vmath.min(a.x, b.x), vmath.min(a.y, b.y)]);
    } else if (a instanceof vmath.vec2i && typeof b === "number") {
      return new vmath.vec2i([vmath.min(a.x, b), vmath.min(a.y, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec2i) {
      return new vmath.vec2i([vmath.min(a, b.x), vmath.min(a, b.x)]);
    } else if (a instanceof vmath.vec3i && b instanceof vmath.vec3i) {
      return new vmath.vec3i([vmath.min(a.x, b.x), vmath.min(a.y, b.y), vmath.min(a.z, b.z)]);
    } else if (a instanceof vmath.vec3i && typeof b === "number") {
      return new vmath.vec3i([vmath.min(a.x, b), vmath.min(a.y, b), vmath.min(a.z, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec3i) {
      return new vmath.vec3i([vmath.min(a, b.x), vmath.min(a, b.x), vmath.min(a, b.z)]);
    } else if (a instanceof vmath.vec4i && b instanceof vmath.vec4i) {
      return new vmath.vec4i([vmath.min(a.x, b.x), vmath.min(a.y, b.y), vmath.min(a.z, b.z), vmath.min(a.w, b.w)]);
    } else if (a instanceof vmath.vec4i && typeof b === "number") {
      return new vmath.vec4i([vmath.min(a.x, b), vmath.min(a.y, b), vmath.min(a.z, b), vmath.min(a.w, b)]);
    } else if (typeof a === "number" && b instanceof vmath.vec4i) {
      return new vmath.vec4i([vmath.min(a, b.x), vmath.min(a, b.x), vmath.min(a, b.z), vmath.min(a, b.w)]);
    }
  };

  vmath.clamp = function(x, m, M) {
    if (typeof x === "number" && typeof m === "number" && typeof M === "number") {
      return vmath.min(M, vmath.max(m, x));
    }
    if (x instanceof vmath.vec2f && m instanceof vmath.vec2f && M instanceof vmath.vec2f) {
      return new vmath.vec2f([vmath.clamp(x.x, m.x, M.x), vmath.clamp(x.y, m.y, M.y)]);
    } else if (x instanceof vmath.vec2f && typeof m === "number" && typeof M === "number") {
      return new vmath.vec2f([vmath.clamp(x.x, m, M), vmath.clamp(x.y, m, M)]);
    } else if (x instanceof vmath.vec3f && m instanceof vmath.vec3f && M instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.clamp(x.x, m.x, M.x), vmath.clamp(x.y, m.y, M.y), vmath.clamp(x.z, m.z, M.z)]);
    } else if (x instanceof vmath.vec3f && typeof m === "number" && typeof M === "number") {
      return new vmath.vec3f([vmath.clamp(x.x, m, M), vmath.clamp(x.y, m, M), vmath.clamp(x.z, m, M)]);
    } else if (x instanceof vmath.vec4f && m instanceof vmath.vec4f && M instanceof vmath.vec4f) {
      return new vmath.vec4f([vmath.clamp(x.x, m.x, M.x), vmath.clamp(x.y, m.y, M.y), vmath.clamp(x.z, m.z, M.z), vmath.clamp(x.w, m.w, M.w)]);
    } else if (x instanceof vmath.vec4f && typeof m === "number" && typeof M === "number") {
      return new vmath.vec4f([vmath.clamp(x.x, m, M), vmath.clamp(x.y, m, M), vmath.clamp(x.z, m, M), vmath.clamp(x.w, m, M)]);
    } else if (x instanceof vmath.vec2i && m instanceof vmath.vec2i && M instanceof vmath.vec2i) {
      return new vmath.vec2i([vmath.clamp(x.x, m.x, M.x), vmath.clamp(x.y, m.y, M.y)]);
    } else if (x instanceof vmath.vec2i && typeof m === "number" && typeof M === "number") {
      return new vmath.vec2i([vmath.clamp(x.x, m, M), vmath.clamp(x.y, m, M)]);
    } else if (x instanceof vmath.vec3i && m instanceof vmath.vec3i && M instanceof vmath.vec3i) {
      return new vmath.vec3i([vmath.clamp(x.x, m.x, M.x), vmath.clamp(x.y, m.y, M.y), vmath.clamp(x.z, m.z, M.z)]);
    } else if (x instanceof vmath.vec3i && typeof m === "number" && typeof M === "number") {
      return new vmath.vec3i([vmath.clamp(x.x, m, M), vmath.clamp(x.y, m, M), vmath.clamp(x.z, m, M)]);
    } else if (x instanceof vmath.vec4i && m instanceof vmath.vec4i && M instanceof vmath.vec4i) {
      return new vmath.vec4i([vmath.clamp(x.x, m.x, M.x), vmath.clamp(x.y, m.y, M.y), vmath.clamp(x.z, m.z, M.z), vmath.clamp(x.w, m.w, M.w)]);
    } else if (x instanceof vmath.vec4i && typeof m === "number" && typeof M === "number") {
      return new vmath.vec4i([vmath.clamp(x.x, m, M), vmath.clamp(x.y, m, M), vmath.clamp(x.z, m, M), vmath.clamp(x.w, m, M)]);
    }
  };

  vmath.array_vec2f = function(array) {
    var i, _i, _j, _len, _ref, _results, _results1;
    if ((array != null) && __modulo(array.length, 2) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 2) {
        i = array[_i];
        _results.push(new vmath.vec2f((function() {
          _results1 = [];
          for (var _j = i, _ref = i + 2; i <= _ref ? _j < _ref : _j > _ref; i <= _ref ? _j++ : _j--){ _results1.push(_j); }
          return _results1;
        }).apply(this)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.array_vec2i = function(array) {
    var i, _i, _j, _len, _ref, _results, _results1;
    if ((array != null) && __modulo(array.length, 2) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 2) {
        i = array[_i];
        _results.push(new vmath.vec2i((function() {
          _results1 = [];
          for (var _j = i, _ref = i + 2; i <= _ref ? _j < _ref : _j > _ref; i <= _ref ? _j++ : _j--){ _results1.push(_j); }
          return _results1;
        }).apply(this)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.array_vec3f = function(array) {
    var i, _i, _j, _len, _ref, _results, _results1;
    if ((array != null) && __modulo(array.length, 3) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 3) {
        i = array[_i];
        _results.push(new vmath.vec3f((function() {
          _results1 = [];
          for (var _j = i, _ref = i + 3; i <= _ref ? _j < _ref : _j > _ref; i <= _ref ? _j++ : _j--){ _results1.push(_j); }
          return _results1;
        }).apply(this)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.array_vec3i = function(array) {
    var i, _i, _j, _len, _ref, _results, _results1;
    if ((array != null) && __modulo(array.length, 3) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 3) {
        i = array[_i];
        _results.push(new vmath.vec3i((function() {
          _results1 = [];
          for (var _j = i, _ref = i + 3; i <= _ref ? _j < _ref : _j > _ref; i <= _ref ? _j++ : _j--){ _results1.push(_j); }
          return _results1;
        }).apply(this)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.array_vec4i = function(array) {
    var i, _i, _j, _len, _ref, _results, _results1;
    if ((array != null) && __modulo(array.length, 4) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 4) {
        i = array[_i];
        _results.push(new vmath.vec4i((function() {
          _results1 = [];
          for (var _j = i, _ref = i + 4; i <= _ref ? _j < _ref : _j > _ref; i <= _ref ? _j++ : _j--){ _results1.push(_j); }
          return _results1;
        }).apply(this)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.array_vec4f = function(array) {
    var i, _i, _j, _len, _ref, _results, _results1;
    if ((array != null) && __modulo(array.length, 4) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 4) {
        i = array[_i];
        _results.push(new vmath.vec4f((function() {
          _results1 = [];
          for (var _j = i, _ref = i + 4; i <= _ref ? _j < _ref : _j > _ref; i <= _ref ? _j++ : _j--){ _results1.push(_j); }
          return _results1;
        }).apply(this)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.array_mat4f = function(array) {
    var i, _i, _len, _results;
    if ((array != null) && __modulo(array.length, 16) === 0) {
      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i += 16) {
        i = array[_i];
        _results.push(new vmath.mat4f(new vec4f.slice(i, i + 4), new vec4f.slice(i + 5, i + 8), new vec4f.slice(i + 9, i + 12), new vec4f.slice(i + 13, i + 16)));
      }
      return _results;
    } else {
      return [];
    }
  };

  vmath.mean = function(a) {
    if (a instanceof vmath.vec2f) {
      return (a.x + a.y) / 2;
    } else if (a instanceof vmath.vec3f) {
      return (a.x + a.y + a.z) / 3;
    } else if (a instanceof vmath.vec4f) {
      return (a.x + a.y + a.z + a.w) / 4;
    }
  };

  vmath.dot = function(a, b) {
    if (a instanceof vmath.vec2f && b instanceof vmath.vec2f) {
      return a.x * b.x + a.y * b.y;
    } else if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return a.x * b.x + a.y * b.y + a.z * b.z;
    } else if (a instanceof vmath.vec4f && b instanceof vmath.vec4f) {
      return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
    }
  };

  vmath.llength = function(a) {
    if (a instanceof vmath.vec2f || a instanceof vmath.vec3f || a instanceof vmath.vec4f) {
      return Math.sqrt(vmath.dot(a, a));
    }
  };

  vmath.lengthSqr = function(a) {
    if (a instanceof vmath.vec2f || a instanceof vmath.vec3f || a instanceof vmath.vec4f) {
      return vmath.dot(a, a);
    }
  };

  vmath.normalize = function(a) {
    var l;
    if (a instanceof vmath.vec2f) {
      l = vmath.llength(a);
      if (l === 0) {
        return new vmath.vec2f;
      } else {
        return vmath.mul(a, 1 / l);
      }
    } else if (a instanceof vmath.vec3f) {
      l = vmath.llength(a);
      if (l === 0) {
        return new vmath.vec3f;
      } else {
        return vmath.mul(a, 1 / l);
      }
    } else if (a instanceof vmath.vec4f) {
      l = vmath.llength(a);
      if (l === 0) {
        return new vmath.vec4f;
      } else {
        return vmath.mul(a, 1 / l);
      }
    }
  };

  vmath.pow = function(a, b) {
    if (a instanceof vmath.vec3f && typeof b === "number") {
      return new vmath.vec3f([vmath.pow(a.x, b), vmath.pow(a.y, b), vmath.pow(a.z, b)]);
    } else if (a instanceof vmath.vec4f && typeof b === "number") {
      return new vmath.vec4f([vmath.pow(a.x, b), vmath.pow(a.y, b), vmath.pow(a.z, b), vmath.pow(a.w, b)]);
    }
  };

  vmath.sqrt = function(a) {
    if (a instanceof vmath.vec3f) {
      return new vmath.vec3f([Math.sqrt(a.x), Math.sqrt(a.y), Math.sqrt(a.z)]);
    } else if (a instanceof vmath.vec4f) {
      return new vmath.vec4f([Math.sqrt(a.x), Math.sqrt(a.y), Math.sqrt(a.z), Math.sqrt(a.w)]);
    }
  };

  vmath.exp = function(a) {
    if (a instanceof vmath.vec3f) {
      return new vmath.vec3f([Math.exp(a.x), Math.exp(a.y), Math.exp(a.z)]);
    } else if (a instanceof vmath.vec4f) {
      return new vmath.vec4f([Math.exp(a.x), Math.exp(a.y), Math.exp(a.z), Math.exp(a.w)]);
    }
  };

  vmath.dist = function(a, b) {
    if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return vmath.llength(vmath.sub(a, b));
    }
  };

  vmath.distSqr = function(a, b) {
    if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return vmath.lengthSqr(vmath.sub(a, b));
    }
  };

  vmath.cross = function(a, b) {
    if (a instanceof vmath.vec3f && b instanceof vmath.vec3f) {
      return new vmath.vec3f([a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x]);
    }
  };

  vmath.orthonormalize_zyx = function(x, y, z) {
    var ret;
    if (x instanceof vmath.vec3f && y instanceof vmath.vec3f && z instanceof vmath.vec3f) {
      z = vmath.normalize(z);
      x = vmath.normalize(vmath.cross(y, z));
      return y = vmath.normalize(vmath.cross(z, x));
    } else if (x instanceof vmath.frame3f) {
      ret = x.clone();
      vmath.orthonormalize_zyx(ret.x, ret.y, ret.z);
      return ret;
    }
  };

  vmath.orthonormalize_zxy = function(x, y, z) {
    var ret;
    if (x instanceof vmath.vec3f && y instanceof vmath.vec3f && z instanceof vmath.vec3f) {
      z = vmath.normalize(z);
      y = vmath.normalize(vmath.cross(z, x));
      return x = vmath.normalize(vmath.cross(y, z));
    } else if (x instanceof vmath.frame3f) {
      ret = x.clone();
      vmath.orthonormalize_zxy(ret.x, ret.y, ret.z);
      return ret;
    }
  };

  vmath.orthonormalize_xzy = function(x, y, z) {
    var ret;
    if (x instanceof vmath.vec3f && y instanceof vmath.vec3f && z instanceof vmath.vec3f) {
      x = vmath.normalize(x);
      y = vmath.normalize(vmath.cross(z, x));
      return z = vmath.normalize(vmath.cross(x, y));
    } else if (x instanceof vmath.frame3f) {
      ret = x.clone();
      vmath.orthonormalize_xzy(ret.x, ret.y, ret.z);
      return ret;
    }
  };

  vmath.reflect = function(v, n) {
    if (v instanceof vmath.vec3f && n instanceof vmath.vec3f) {
      return vmath.sub(v, vmath.mul(n, 2 * vmath.dot(n, v)));
    }
  };

  vmath.refract = function(v, n, eta) {
    var k;
    if (v instanceof vmath.vec3f && n instanceof vmath.vec3f && typeof eta === "number") {
      k = 1 - eta * eta * (1 - vmath.dot(n, v)) * vmath.dot(n, v);
      if (k < 0) {
        return new vmath.vec3f;
      } else {
        return vmath.sub(vmath.mul(eta, v), vmath.mul(n, eta * vmath.dot(n, v) + Math.sqrt(k)));
      }
    }
  };

  vmath.max_component = function(a) {
    var r;
    if (a instanceof vmath.vec3i) {
      r = a.x;
      r = vmath.max(r, a.x);
      r = vmath.max(r, a.y);
      r = vmath.max(r, a.z);
      return r;
    }
  };

  vmath.min_component = function(a) {
    var r;
    if (a instanceof vmath.vec3i) {
      r = a.x;
      r = vmath.min(r, a.x);
      r = vmath.min(r, a.y);
      r = vmath.min(r, a.z);
      return r;
    }
  };

  vmath.inverse = function(f) {
    var d, di, frame_obj, ret;
    if (f instanceof vmath.frame3f) {
      frame_obj = {
        o: [-vmath.dot(f.o, f.x), -vmath.dot(f.o, f.y), -vmath.dot(f.o, f.z)],
        x: [f.x.x, f.y.x, f.z.x],
        y: [f.x.y, f.y.y, f.z.y],
        z: [f.x.z, f.y.z, f.z.z]
      };
      return new vmath.frame3f(frame_obj);
    } else if (f instanceof vmath.mat4f) {
      d = vmath.determinant(f);
      di = 1 / d;
      ret = new vmath.mat4f(+(+f.y.y * (f.z.z * f.w.w - f.z.w * f.w.z) - f.y.z * (f.z.y * f.w.w - f.z.w * f.w.y) + f.y.w * (f.z.y * f.w.z - f.z.z * f.w.y)), -(+f.x.y * (f.z.z * f.w.w - f.z.w * f.w.z) - f.x.z * (f.z.y * f.w.w - f.z.w * f.w.y) + f.x.w * (f.z.y * f.w.z - f.z.z * f.w.y)), +(+f.x.y * (f.y.z * f.w.w - f.y.w * f.w.z) - f.x.z * (f.y.y * f.w.w - f.y.w * f.w.y) + f.x.w * (f.y.y * f.w.z - f.y.z * f.w.y)), -(+f.x.y * (f.y.z * f.z.w - f.y.w * f.z.z) - f.x.z * (f.y.y * f.z.w - f.y.w * f.z.y) + f.x.w * (f.y.y * f.z.z - f.y.z * f.z.y)), -(+f.y.x * (f.z.z * f.w.w - f.z.w * f.w.z) - f.y.z * (f.z.x * f.w.w - f.z.w * f.w.x) + f.y.w * (f.z.x * f.w.z - f.z.z * f.w.x)), +(+f.x.x * (f.z.z * f.w.w - f.z.w * f.w.z) - f.x.z * (f.z.x * f.w.w - f.z.w * f.w.x) + f.x.w * (f.z.x * f.w.z - f.z.z * f.w.x)), -(+f.x.x * (f.y.z * f.w.w - f.y.w * f.w.z) - f.x.z * (f.y.x * f.w.w - f.y.w * f.w.x) + f.x.w * (f.y.x * f.w.z - f.y.z * f.w.x)), +(+f.x.x * (f.y.z * f.z.w - f.y.w * f.z.z) - f.x.z * (f.y.x * f.z.w - f.y.w * f.z.x) + f.x.w * (f.y.x * f.z.z - f.y.z * f.z.x)), +(+f.y.x * (f.z.y * f.w.w - f.z.w * f.w.y) - f.y.y * (f.z.x * f.w.w - f.z.w * f.w.x) + f.y.w * (f.z.x * f.w.y - f.z.y * f.w.x)), -(+f.x.x * (f.z.y * f.w.w - f.z.w * f.w.y) - f.x.y * (f.z.x * f.w.w - f.z.w * f.w.x) + f.x.w * (f.z.x * f.w.y - f.z.y * f.w.x)), +(+f.x.x * (f.y.y * f.w.w - f.y.w * f.w.y) - f.x.y * (f.y.x * f.w.w - f.y.w * f.w.x) + f.x.w * (f.y.x * f.w.y - f.y.y * f.w.x)), -(+f.x.x * (f.y.y * f.z.w - f.y.w * f.z.y) - f.x.y * (f.y.x * f.z.w - f.y.w * f.z.x) + f.x.w * (f.y.x * f.z.y - f.y.y * f.z.x)), -(+f.y.x * (f.z.y * f.w.z - f.z.z * f.w.y) - f.y.y * (f.z.x * f.w.z - f.z.z * f.w.x) + f.y.z * (f.z.x * f.w.y - f.z.y * f.w.x)), +(+f.x.x * (f.z.y * f.w.z - f.z.z * f.w.y) - f.x.y * (f.z.x * f.w.z - f.z.z * f.w.x) + f.x.z * (f.z.x * f.w.y - f.z.y * f.w.x)), -(+f.x.x * (f.y.y * f.w.z - f.y.z * f.w.y) - f.x.y * (f.y.x * f.w.z - f.y.z * f.w.x) + f.x.z * (f.y.x * f.w.y - f.y.y * f.w.x)), +(+f.x.x * (f.y.y * f.z.z - f.y.z * f.z.y) - f.x.y * (f.y.x * f.z.z - f.y.z * f.z.x) + f.x.z * (f.y.x * f.z.y - f.y.y * f.z.x)));
      return ret.mul(di);
    }
  };

  vmath.frame_from_z = function(z) {
    var f;
    if (z instanceof vmath.vec3f) {
      f = vmath.identity_frame3f.clone();
      f.z = vmath.normalize(z);
      f.y = Math.abs(vmath.dot(vmath.y3f, z)) > 0.95 ? vmath.x3f.clone() : vmath.y3f.clone();
      return vmath.orthonormalize_zyx(f);
    }
  };

  vmath.lookat_frame = function(eye, center, up, flipped) {
    var f;
    if (flipped == null) {
      flipped = false;
    }
    if (eye instanceof vmath.vec3f && center instanceof vmath.vec3f && up instanceof vmath.vec3f && typeof flipped === "boolean") {
      f = new vmath.frame3f;
      f.o = eye.clone();
      f.z = vmath.normalize(vmath.sub(center, eye));
      if (flipped) {
        f.z = f.z.opposite();
      }
      f.y = up.clone();
      f = vmath.orthonormalize_zyx(f);
      return f;
    }
  };

  vmath.transform_point = function(f, v) {
    var ret, tv;
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      ret = f.o.clone();
      ret.sum(vmath.mul(f.x, v.x));
      ret.sum(vmath.mul(f.y, v.y));
      ret.sum(vmath.mul(f.z, v.z));
      return ret;
    } else if (f instanceof vmath.mat4f && v instanceof vmath.vec3f) {
      tv = vmath.mul(f, new vmath.vec4f([v.x, v.y, v.z, 1]));
      return vmath.div(new vmath.vec3f([tv.x, tv.y, tv.z], tv.w));
    }
  };

  vmath.transform_vector = function(f, v) {
    var ret, tv;
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      ret = vmath.mul(f.x, v.x);
      ret.sum(vmath.mul(f.y, v.y));
      ret.sum(vmath.mul(f.z, v.z));
      return ret;
    } else if (f instanceof vmath.mat4f && v instanceof vmath.vec3f) {
      tv = vmath.mul(f, new vmath.vec4f([v.x, v.y, v.z, 0]));
    }
    return new vmath.vec3f([tv.x, tv.y, tv.z]);
  };

  vmath.transform_direction = function(f, v) {
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      return vmath.transform_vector(f, v);
    } else if (f instanceof vmath.mat4f && v instanceof vmath.vec3f) {
      return vmath.normalize(vmath.transform_vector(f, v));
    }
  };

  vmath.transform_normal = function(f, v) {
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      return vmath.transform_vector(f, v);
    } else if (f instanceof vmath.mat4f && v instanceof vmath.vec3f) {
      return vmath.normalize(vmath.transform_vector(f, v));
    }
  };

  vmath.transform_frame = function(f, v) {
    var frame_obj, ret;
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      frame_obj = {
        o: vmath.transform_point(f, v.o).array(),
        x: vmath.transform_vector(f, v.x).array(),
        y: vmath.transform_vector(f, v.y).array(),
        z: vmath.transform_vector(f, v.z).array()
      };
      return new vmath.frame3f(frame_obj);
    } else if (f instanceof vmath.mat4f && v instanceof vmath.vec3f) {
      ret = new vmath.frame3f;
      ret.o = vmath.transform_point(f, v.o);
      ret.x = vmath.transform_direction(f, v.x);
      ret.y = vmath.transform_direction(f, v.y);
      ret.z = vmath.cross(ret.x, ret.y);
      ret = vmath.orthonormalize_zyx(ret);
      return ret;
    }
  };

  vmath.transform_point_inverse = function(f, v) {
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.dot(vmath.sub(v, f.o), f.x), vmath.dot(vmath.sub(v, f.o), f.y), vmath.dot(vmath.sub(v, f.o), f.z)]);
    }
  };

  vmath.transform_vector_inverse = function(f, v) {
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      return new vmath.vec3f([vmath.dot(v, f.x), vmath.dot(v, f.y), vmath.dot(v, f.z)]);
    }
  };

  vmath.transform_direction_inverse = function(f, v) {
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      return vmath.transform_vector_inverse(f, v);
    }
  };

  vmath.transform_normal_inverse = function(f, v) {
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      return vmath.transform_vector_inverse(f, v);
    }
  };

  vmath.transform_frame_inverse = function(f, v) {
    var frame_obj;
    if (f instanceof vmath.frame3f && v instanceof vmath.vec3f) {
      frame_obj = {
        o: vmath.transform_point_inverse(f, v.o).array(),
        x: vmath.transform_vector_inverse(f, v.x).array(),
        y: vmath.transform_vector_inverse(f, v.y).array(),
        z: vmath.transform_vector_inverse(f, v.z).array()
      };
      return new vmath.frame3f(frame_obj);
    }
  };

  vmath.identity_mat4f = new vmath.mat4f;

  vmath.transpose = function(a) {
    if (a instanceof vmath.mat4f) {
      return new vmath.mat4f(a.x.x, a.y.x, a.z.x, a.w.x, a.x.y, a.y.y, a.z.y, a.w.y, a.x.z, a.y.z, a.z.z, a.w.z, a.x.w, a.y.w, a.z.w, a.w.w);
    }
  };

  vmath.determinant = function(a) {
    if (a instanceof vmath.mat4f) {
      return +a.x.x * (+a.y.y * (a.z.z * a.w.w - a.z.w * a.w.z) - a.y.z * (a.z.y * a.w.w - a.z.w * a.w.y) + a.y.w * (a.z.y * a.w.z - a.z.z * a.w.y)) - a.x.y * (+a.y.x * (a.z.z * a.w.w - a.z.w * a.w.z) - a.y.z * (a.z.x * a.w.w - a.z.w * a.w.x) + a.y.w * (a.z.x * a.w.z - a.z.z * a.w.x)) + a.x.z * (+a.y.x * (a.z.y * a.w.w - a.z.w * a.w.y) - a.y.y * (a.z.x * a.w.w - a.z.w * a.w.x) + a.y.w * (a.z.x * a.w.y - a.z.y * a.w.x)) - a.x.w * (+a.y.x * (a.z.y * a.w.z - a.z.z * a.w.y) - a.y.y * (a.z.x * a.w.z - a.z.z * a.w.x) + a.y.z * (a.z.x * a.w.y - a.z.y * a.w.x));
    }
  };

  vmath.isaffine = function(m) {
    if (m instanceof vmath.mat4f) {
      return m.w.x === 0 && m.w.y === 0 && m.w.z === 0 && m.w.w === 1;
    }
  };

  vmath.translation_matrix = function(t) {
    if (t instanceof vmath.vec3f) {
      return new vmath.mat4f(1, 0, 0, t.x, 0, 1, 0, t.y, 0, 0, 1, t.z, 0, 0, 0, 1);
    }
  };

  vmath.rotation_matrix = function(angle, axis) {
    var c, s, vv;
    if (typeof angle === "numeric" && axis instanceof vmath.vec3f) {
      c = Math.cos(angle);
      s = Math.sin(angle);
      vv = vmath.normalize(axis);
      return new vmath.mat4f(c + (1 - c) * vv.x * vv.x, (1 - c) * vv.x * vv.y - s * vv.z, (1 - c) * vv.x * vv.z + s * vv.y, 0, (1 - c) * vv.x * vv.y + s * vv.z, c + (1 - c) * vv.y * vv.y, (1 - c) * vv.y * vv.z - s * vv.x, 0, (1 - c) * vv.x * vv.z - s * vv.y, (1 - c) * vv.y * vv.z + s * vv.x, c + (1 - c) * vv.z * vv.z, 0, 0, 0, 0, 1);
    }
  };

  vmath.scaling_matrix = function(s) {
    if (s instanceof vmath.vec3f) {
      return new vmath.mat4f(s.x, 0, 0, 0, 0, s.y, 0, 0, 0, 0, s.z, 0, 0, 0, 0, 1);
    }
  };

  vmath.frustum_matrix = function(l, r, b, t, n, f) {
    if (typeof l === "numeric" && typeof r === "numeric" && typeof b === "numeric" && typeof t === "numeric" && typeof n === "numeric" && typeof f === "numeric") {
      return new vmath.mat4f(2 * n / (r - l), 0, (r + l) / (r - l), 0, 0, 2 * n / (t - b), (t + b) / (t - b), 0, 0, 0, -(f + n) / (f - n), -2 * f * n / (f - n), 0, 0, -1, 0);
    }
  };

  vmath.ortho_matrix = function(l, r, b, t, n, f) {
    if (typeof l === "numeric" && typeof r === "numeric" && typeof b === "numeric" && typeof t === "numeric" && typeof n === "numeric" && typeof f === "numeric") {
      return new vmath.mat4f(2 / (r - l), 0, 0, -(r + l) / (r - l), 0, 2 / (t - b), 0, -(t + b) / (t - b), 0, 0, -2 / (f - n), -(f + n) / (f - n), 0, 0, 0, 1);
    }
  };

  vmath.lookat_matrix = function(eye, center, up) {
    var u, v, w;
    if (eye instanceof vmath.vec3f && center instanceof vmath.vec3f && up instanceof vmath.vec3f) {
      w = vmath.normalize(vmath.sub(eye, center));
      u = vmath.normalize(vmath.cross(up, w));
      v = vmath.cross(w, u);
      return new vmath.mat4f(u.x, u.y, u.z, -vmath.dot(u, eye), v.x, v.y, v.z, -vmath.dot(v, eye), w.x, w.y, w.z, -vmath.dot(w, eye), 0, 0, 0, 1);
    }
  };

  vmath.ortho2d_matrix = function(l, r, b, t) {
    if (typeof l === "numeric" && typeof r === "numeric" && typeof b === "numeric" && typeof t === "numeric") {
      return vmath.ortho_matrix(l, r, b, t, -1, 1);
    }
  };

  vmath.perspective_matrix = function(fovy, aspect, near, far) {
    var f;
    if (typeof fovy === "numeric" && typeof aspect === "numeric" && typeof near === "numeric" && typeof far === "numeric") {
      f = 1 / tan(fovy / 2);
      return new vmath.mat4f(f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, (far + near) / (near - far), 2 * far * near / (near - far), 0, 0, -1, 0);
    }
  };

  vmath.frame_to_matrix = function(f) {
    if (f instanceof vmath.frame3f) {
      return new vmath.mat4f(f.x.x, f.y.x, f.z.x, f.o.x, f.x.y, f.y.y, f.z.y, f.o.y, f.x.z, f.y.z, f.z.z, f.o.z, 0, 0, 0, 1);
    }
  };

  vmath.frame_to_matrix_inverse = function(f) {
    if (f instanceof vmath.frame3f) {
      return new vmath.mat4f(f.x.x, f.x.y, f.x.z, -vmath.dot(f.o, f.x), f.y.x, f.y.y, f.y.z, -vmath.dot(f.o, f.y), f.z.x, f.z.y, f.z.z, -vmath.dot(f.o, f.z), 0, 0, 0, 1);
    }
  };

  vmath.matrix_to_frame = function(m) {
    var f;
    if (m instanceof vmath.mat4f) {
      error_if_not(vmath.isaffine(m), "not affine");
      f = new vmath.frame3f();
      f.o = new vmath.vec3f([m.x.w, m.y.w, m.z.w]);
      f.x = new vmath.vec3f([m.x.x, m.y.x, m.z.x]);
      f.y = new vmath.vec3f([m.x.y, m.y.y, m.z.y]);
      f.z = new vmath.vec3f([m.x.z, m.y.z, m.z.z]);
      return f;
    }
  };

  vmath.isvalid = function(a) {
    if (a instanceof vmath.range1f) {
      return vmath.min(a.min, a.max) === a.min;
    } else if (a instanceof vmath.range3f) {
      return vmath.equal(vmath.min(a.min, a.max), a.min);
    }
  };

  vmath.size = function(a) {
    if (a instanceof vmath.range1f) {
      return a.max - a.min;
    } else if (a instanceof vmath.range3f) {
      return vmath.sub(a.max, a.min);
    }
  };

  vmath.center = function(a) {
    if (a instanceof vmath.range1f) {
      return (a.max + a.min) / 2;
    } else if (a instanceof vmath.range3f) {
      return vmath.div(vmath.sum(a.max, a.min), 2);
    }
  };

  vmath.runion = function(a, b) {
    if (a instanceof vmath.range1f && typeof b === "number") {
      if (!vmath.isvalid(a)) {
        return new vmath.range1f(b, b);
      }
      return new vmath.range1f(vmath.min(a.min, b), vmath.max(a.max, b));
    } else if (a instanceof vmath.range1f && b instanceof vmath.range1f) {
      if (!vmath.isvalid(a)) {
        return b;
      }
      if (!vmath.isvalid(b)) {
        return a;
      }
      return new vmath.range1f(vmath.min(a.min, b.min), vmath.max(a.max, b.max));
    } else if (a instanceof vmath.range3f && typeof b === "number") {
      if (!vmath.isvalid(a)) {
        return new vmath.range3f(b, b);
      }
      return vmath.range3f(vmath.min(a.min, b), vmath.max(a.max, b));
    } else if (a instanceof vmath.range3f && b instanceof vmath.range3f) {
      if (!vmath.isvalid(a)) {
        return b;
      }
      if (!vmath.isvalid(b)) {
        return a;
      }
      return new vmath.range3f(vmath.min(a.min, b.min), vmath.max(a.max, b.max));
    }
  };

  vmath.rscale = function(a, b) {
    if (a instanceof vmath.range1f && typeof b === "number") {
      return new vmath.range1f(vmath.center(a) - vmath.size(a) * b / 2, vmath.center(a) + vmath.size(a) * b / 2);
    } else if (a instanceof vmath.range3f && typeof b === "number") {
      return new vmath.range3f(vmath.sub(vmath.center(a), vmath.mul(vmath.size(a), vmath.div(b, 2))), vmath.sum(vmath.center(a), vmath.mul(vmath.size(a), vmath.div(b, 2))));
    }
  };

  vmath.make_range3f = function(points) {
    var bbox, p, _i, _len;
    if (points instanceof Array) {
      bbox = new vmath.range3f();
      for (_i = 0, _len = points.length; _i < _len; _i++) {
        p = points[_i];
        bbox = vmath.runion(bbox, p);
      }
      return bbox;
    }
  };

  vmath.corners = function(a) {
    if (a instanceof vmath.range3f) {
      return [new vmath.vec3f([a.min.x, a.min.y, a.min.z], new vmath.vec3f([a.min.x, a.min.y, a.max.z], new vmath.vec3f([a.min.x, a.max.y, a.min.z], new vmath.vec3f([a.min.x, a.max.y, a.max.z], new vmath.vec3f([a.max.x, a.min.y, a.min.z], new vmath.vec3f([a.max.x, a.min.y, a.max.z], new vmath.vec3f([a.max.x, a.max.y, a.min.z], new vmath.vec3f([a.max.x, a.max.y, a.max.z]))))))))];
    }
  };

}).call(this);

//# sourceMappingURL=vmath.map
